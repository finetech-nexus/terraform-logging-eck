{{- if .Values.filebeat.enabled -}}
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat
  namespace: {{ .Values.namespace }}
spec:
  type: filebeat
  version: {{ .Values.version }}
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  config:
    filebeat.autodiscover:
      providers:
      - hints:
          enabled: true
        node: ${NODE_NAME}
        type: kubernetes
      templates:
      - config:
        - paths:
          - /var/log/containers/*.log
          processors:
          - decode_json_fields:
              fields:
              - message
              overwrite_keys: true
              target: json
          type: container
    filebeat.inputs:
    - enabled: false
      id: container
      parsers:
      - container:
          format: json-file
          stream: all
      paths:
      - /var/log/containers/*.log
      type: filestream
    - paths:
      - /var/log/containers/*.log
      exclude_files:
      - /var/log/containers/external-secrets*.log
      - /var/log/containers/karpenter*.log
      - /var/log/containers/keda*.log
      - /var/log/containers/aws-load*.log
      - /var/log/containers/aws-node*.log
      - /var/log/containers/cluster-autoscaler*.log
      - /var/log/containers/coredns*.log
      - /var/log/containers/ebs-csi*.log
      - /var/log/containers/efs-csi*.log
      - /var/log/containers/kube-proxy*.log
      - /var/log/containers/metrics-server*.log
      - /var/log/containers/reloader*.log
      - /var/log/containers/vertical-pod*.log
      - /var/log/containers/kubeclarity*.log
      - /var/log/containers/cost-analyzer*.log
      - /var/log/containers/alertmanager*.log
      - /var/log/containers/blackbox-exporter*.log
      - /var/log/containers/ethtool*.log
      - /var/log/containers/grafana*.log
      - /var/log/containers/loki*.log
      - /var/log/containers/prometheus*.log
      - /var/log/containers/velero*.log
      - /var/log/containers/apm*.log
      - /var/log/containers/elastalert*.log
      - /var/log/containers/filebeat*.log
      - /var/log/containers/elasticsearch*.log
      - /var/log/containers/elastic*.log
      processors:
      - drop_event:
          when:
            regexp:
              log.file.path: grafana.*\.log|prometheus.*\.log|apm.*\.log|filebeat.*\.log|elast.*\.log|cluster.*\.log|kibana.*\.log|vertical.*\.log|external.*\.log|defectdojo.*\.log|alertmanager.*\.log|velero.*\.log|blackbox.*\.log|cost.*\.log|kube.*\.log|vertical.*\.log|reloader.*\.log|metrics.*\.log|efs.*\.log|ebs.*\.log|aws.*\.log|keda.*\.log|sonarqube.*\.log|coredns.*\.log|jenkins.*\.log|istio.*\.log|cert.*\.log|argo.*\.log|elastic.*\.log|karpenter.*\.log|ingress-nginx.*\.log
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
          matchers:
          - logs_path:
              logs_path: /var/log/containers/
      - drop_fields:
          fields:
          - agent.id
          - agent.name
          - agent.ephemeral_id
          - _type
          - _score
          - cloud.image.id
          - container.id
          - kubernetes.labels.pod-template-hash
          - kubernetes.namespace_uid
          - kubernetes.node.labels.eks_amazonaws_com/nodegroup-image
          - kubernetes.node.labels.eks_amazonaws_com/sourceLaunchTemplateId
          - kubernetes.node.labels.k8s_io/cloud-provider-aws
          - kubernetes.node.labels.karpenter_k8s_aws/instance-hypervisor
          - kubernetes.node.labels.karpenter_k8s_aws/instance-generation
          - kubernetes.node.labels.karpenter_k8s_aws/instance-family
          - kubernetes.node.labels.karpenter_k8s_aws/instance-cpu
          - kubernetes.node.labels.karpenter_k8s_aws/instance-category
          - kubernetes.node.labels.beta_kubernetes_io/os
          - kubernetes.node.labels.beta_kubernetes_io/arch
          - kubernetes.node.labels.karpenter_k8s_aws/instance-memory
          - kubernetes.node.labels.karpenter_k8s_aws/instance-pods
          - kubernetes.node.labels.karpenter_k8s_aws/instance-size
          - kubernetes.node.labels.karpenter_sh/capacity-type
          - kubernetes.node.labels.karpenter_sh/initialized
          - kubernetes.node.labels.kubernetes_io/arch
          - kubernetes.node.labels.kubernetes_io/os
          - kubernetes.node.labels.node_kubernetes_io/instance-type
          - kubernetes.node.labels.topology_ebs_csi_aws_com/zone
          - kubernetes.node.labels.topology_kubernetes_io/region
          - kubernetes.node.labels.topology_kubernetes_io/zone
          - kubernetes.labels.controller-uid
          - kubernetes.node.uid
          - kubernetes.pod.uid
          - kubernetes.replicaset.name
      stream: all
      type: container
    filebeat.modules:
    - module: nginx
      ingress_controller:
        enabled: {{ .Values.filebeat.modules.ingress_nginx_controller_enabled }}
        input.type: container
        var.paths:
        - /var/log/containers/ingress-nginx-controller*.log
    - module: mongodb
      log:
        enabled: {{ .Values.filebeat.modules.mongodb_enabled }}
        var.paths:
        - /var/log/containers/mongo*.log
    - module: mysql
      error:
        enabled: {{ .Values.filebeat.modules.mysql_enabled }}
        var.paths:
        - /var/log/pods/mysql*/mysql/*.log
      slowlog:
        enabled: {{ .Values.filebeat.modules.mysql_enabled }}
        var.paths:
        - /var/log/pods/mysql*/slow-log/*.log
    - module: postgresql
      log:
        enabled: {{ .Values.filebeat.modules.postgresql_enabled }}
        var.paths:
        - /var/log/containers/postgres*.log
    output.elasticsearch:
      index: filebeat-%{[agent.version]}-%{+yyyy.MM.dd}
      indices:
        {{- if .Values.filebeat.modules.application_index_enabled }}
        - index: {{ .Values.filebeat.application_index_name }}-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.application_input_type_key }}: {{ .Values.filebeat.application_input_type_value }}
        {{- end }}
        {{- if .Values.filebeat.modules.database_mongodb_index_enabled }}
        - index: {{ .Values.filebeat.database_index_name }}-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.mongodb_input_type_key }}: {{ .Values.filebeat.mongodb_input_type_value }}
        {{- end }}
        {{- if .Values.filebeat.modules.database_mysql_index_enabled }}
        - index: {{ .Values.filebeat.database_index_name }}-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.mysql_input_type_key }}: {{ .Values.filebeat.mysql_input_type_value }}
        {{- end }}
        {{- if .Values.filebeat.modules.database_redis_index_enabled }}
        - index: {{ .Values.filebeat.database_index_name }}-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.redis_input_type_key }}: {{ .Values.filebeat.redis_input_type_value }}
        {{- end }}
        {{- if .Values.filebeat.modules.database_rabbitmq_index_enabled }}
        - index: {{ .Values.filebeat.database_index_name }}-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.rabbitmq_input_type_key }}: {{ .Values.filebeat.rabbitmq_input_type_value }}
        {{- end }}
        {{- if .Values.filebeat.modules.database_postgres_index_enabled }}
        - index: {{ .Values.filebeat.database_index_name }}-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.postgres_input_type_key }}: {{ .Values.filebeat.postgres_input_type_value }}
        {{- end }}
        {{- if .Values.filebeat.modules.aws_index_enabled }}
        - index: aws-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.aws_input_type_key }}: {{ .Values.filebeat.aws_input_type_value }}
        {{- end }}
        {{- if .Values.filebeat.custom_index_enabled }}
        - index: {{ .Values.filebeat.custom_index_name }}-%{+yyyy.MM.dd}
          when.contains:
            {{ .Values.filebeat.custom_input_type_key }}: {{ .Values.filebeat.custom_input_type_value }}
        {{- end }}
      username: {{ .Values.filebeat.username }}
      password: {{ .Values.filebeat.password }}
    json.keys_under_root: true
    json.add_error_key: true
    json.message_key: log
    setup.ilm.enabled: false
    setup.ilm.policy_name: "custom-ilm"
    setup.ilm.policy_file: "/usr/share/filebeat/ilm-policy.json"
    setup.ilm.check_exists: true
    setup.ilm.overwrite: false
    setup.template.settings:
      index.number_of_shards: 3
      index.number_of_replicas: 1
    logging.metrics.enabled: false
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: filebeat
        priorityClassName: filebeat-pod-critical
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        containers:
        - name: filebeat
          {{- with .Values.filebeat.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            # privileged: true
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
          - name: ilm-configmap-volume
            mountPath: /usr/share/filebeat/ilm-policy.json
            subPath: ilm-policy.json
            readOnly: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: ilm-configmap-volume
          configMap:
            name: ilmpolicy-config
---

{{- if .Values.filebeat.modules.aws_enabled }}
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat-aws
  namespace: {{ .Values.namespace }}
spec:
  image: "docker.elastic.co/beats/filebeat:{{ .Values.version }}"
  imagePullPolicy: "IfNotPresent"
  replicas: 2
  type: filebeat-aws
  version: {{ .Values.version }}
  elasticsearchRef:
    name: elasticsearch
  kibanaRef:
    name: kibana
  config:
    filebeat.modules:
    - module: aws
      cloudtrail:
        enabled: {{ .Values.filebeat.modules.aws_cloudtrail_enabled }}
        var.bucket_arn: {{ .Values.filebeat.modules.cloudtrail_bucket_arn }}
        var.bucket_list_interval: 300s
        var.bucket_list_prefix: {{ .Values.filebeat.modules.cloudtrail_bucket_prefix }}
        var.number_of_workers: 5
        var.role_arn: {{ .Values.filebeat.modules.role_arn }}
      elb:
        enabled: {{ .Values.filebeat.modules.aws_elb_enabled }}
        var.bucket_arn: {{ .Values.filebeat.modules.elb_bucket_arn }}
        var.bucket_list_interval: 300s
        var.bucket_list_prefix: {{ .Values.filebeat.modules.elb_bucket_prefix }}
        var.number_of_workers: 5
        var.role_arn: {{ .Values.filebeat.modules.role_arn }}
      vpcflow:
        enabled: {{ .Values.filebeat.modules.aws_vpc_flow_logs_enabled }}
        var.bucket_arn: {{ .Values.filebeat.modules.vpc_flowlogs_bucket_arn }}
        var.bucket_list_interval: 300s
        var.bucket_list_prefix: {{ .Values.filebeat.modules.vpc_flowlogs_bucket_prefix }}
        var.number_of_workers: 5
        var.role_arn: {{ .Values.filebeat.modules.role_arn }}
      s3access:
        enabled: {{ .Values.filebeat.modules.aws_s3access_enabled }}
        var.bucket_arn: {{ .Values.filebeat.modules.s3access_bucket_arn }}
        var.bucket_list_interval: 300s
        var.bucket_list_prefix: {{ .Values.filebeat.modules.s3access_bucket_prefix }}
        var.number_of_workers: 5
        var.role_arn: {{ .Values.filebeat.modules.role_arn }}
    output.elasticsearch:
      username: {{ .Values.filebeat.username }}
      password: {{ .Values.filebeat.password }}
    setup.ilm.enabled: false
    setup.ilm.check_exists: false
    setup.ilm.overwrite: true
    setup.template.settings:
      index.number_of_shards: 3
      index.number_of_replicas: 1
    logging.metrics.enabled: false
    processors:
    - add_cloud_metadata: {}
  deployment:
    podTemplate:
      spec:
        replicas: 2
        imagePullPolicy: "IfNotPresent"
        serviceAccountName: filebeat
        priorityClassName: filebeat-pod-critical
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        containers:
        - name: filebeat-aws
          {{- with .Values.filebeat.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            # privileged: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
---
{{- end }}
{{- end }}
